/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.1.4 .\Tesla.glb
*/

import React, { useRef } from "react";
import { useGLTF } from "@react-three/drei";
import { selectPath } from "../../../../Utils/Utils";

export interface IPieceProp{
  userIndex: number
}

export function Piece(props: IPieceProp) {
  const { nodes, materials } = useGLTF(
    `${selectPath()}/characters/Piece.glb`
  ) as any;

  const materialByUser = (userIndex: number) => {
    switch(userIndex){
      case 0: return materials.Red_Texture;
      case 1: return materials.Green_Texture;
      case 2: return materials.Blue_Texture;
      case 3: return materials.White_Texture;
      default: return materials.White_Texture;
    }
  }
  return (
    <group  dispose={null}>
      <mesh geometry={nodes.Player.geometry} material={materialByUser(props?.userIndex)} position={[0.51, 1.16, -0.5]} rotation={[-Math.PI / 2, 0, 0]} scale={0.01} />
    </group>
  )
}

useGLTF.preload(`${selectPath()}/characters/Piece.glb`)
