/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.1.4 .\Arrows.glb
*/

import React, { useRef, useState } from 'react'
import { useGLTF } from '@react-three/drei'
import { selectPath } from "../Utils/Utils";

export function Arrows(props: any) {
  const { nodes, materials } = useGLTF( `${selectPath()}/characters/Arrows.glb`) as any;
  const [positionX, setPositionX] = useState(13);
  const [positionY, setPositionY] = useState(-13);
  const [rotationZ, setRotationZ] = useState(0);
  const character = props.character;

  const nextX = () => {setPositionX(positionX + 1); setRotationZ(Math.PI / 2)};

  const nextY = () =>  {setPositionY(positionY - 1); setRotationZ(Math.PI)};
  const backX = () => {setPositionX(positionX - 1);  setRotationZ( - Math.PI / 2)};
  const backY = () =>  {setPositionY(positionY + 1);setRotationZ(0)};
  const XlimitUp = 25;
  const XlimitLess = 0;
  const YlimitUp = 0;
  const YlimitLess = -25;
  console.log(positionX, positionY);
  return (
    <group  position={[positionX, 0.4, positionY]}>
    <mesh
      visible={positionX < XlimitUp}
      geometry={nodes.right.geometry}
      material={materials.arrow}
      position={[1.15, 0.6, -0.46]} rotation={[Math.PI / 2, 0, Math.PI / 2]} scale={0.12} 
      onClick={() => nextX()}
    />
    <mesh
      visible={positionX > XlimitLess}
      geometry={nodes.left.geometry}
      material={materials.arrow}
      position={[-0.14, 0.6, -0.46]} rotation={[-Math.PI / 2, 0, -Math.PI / 2]} scale={0.12}
      onClick={() => backX()}
    />
    <mesh
      visible={positionY < YlimitUp}
      geometry={nodes.back.geometry}
      material={materials.arrow}
      position={[0.5, 0.6, 0.18]} rotation={[Math.PI / 2, 0, Math.PI]} scale={0.12}
      onClick={() => backY()}
    />
    <mesh
      visible={positionY > YlimitLess}
      geometry={nodes.front.geometry}
      material={materials.arrow}
      position={[0.5, 0.6, -1.11]} rotation={[-Math.PI / 2, 0, Math.PI]} scale={0.12}
      onClick={() => nextY()}
    />
    {props?.character({rotationZ})}
  </group>
  )
}

// useGLTF.preload('/Arrows.glb')
